// Generated by CoffeeScript 1.12.7
(function() {
  var $, AJAXWorkersManager,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $ = jQuery;

  AJAXWorkersManager = (function() {
    var appendElementLoadMore, appendElementToDOM, getWorkersBoss, shownFirstWorkersId;

    function AJAXWorkersManager() {}

    shownFirstWorkersId = {};

    getWorkersBoss = function(bossId, count, unnecessaryList) {

      /* Get subordinates boss */
      var request, unnecesList;
      unnecesList = unnecessaryList ? unnecessaryList : shownFirstWorkersId;
      request = $.ajax({
        url: "/workers/",
        type: "GET",
        data: {
          boss: bossId,
          count: count,
          unnecessaryId: encodeURI(Object.keys(unnecesList).join())
        },
        async: false
      });
      if (bossId === "first-hierarchy") {
        request.done(function(data, textStatus, jqXHR) {
          var element, i, len, results;
          if (data.length === 0 || data.length < count) {
            $('.load-more-workers').remove();
          }
          results = [];
          for (i = 0, len = data.length; i < len; i++) {
            element = data[i];
            if (!shownFirstWorkersId[element.id]) {
              shownFirstWorkersId[element.id] = {};
              results.push($('.container-workers').append(appendElementToDOM(element)));
            } else {
              results.push(void 0);
            }
          }
          return results;
        });
      } else if (bossId === "second-hierarchy") {
        request.done(function(data, textStatus, jqXHR) {
          var element, exist_show_more, i, len, ref, result_code, results;
          exist_show_more = [];
          if (data.length === 0 || data.length < count) {
            $("#employee-load-more-" + e.target.id).remove();
          }
          results = [];
          for (i = 0, len = data.length; i < len; i++) {
            element = data[i];
            if (Object.keys(shownFirstWorkersId[element.chief]).length >= count) {
              if (ref = element.chief, indexOf.call(exist_show_more, ref) >= 0) {
                continue;
              }
              result_code = $("#employee-id-" + element.chief).append(appendElementLoadMore(element.chief));
              result_code.find("a").click(function(e) {
                getWorkersBoss(e.target.id, count, shownFirstWorkersId[e.target.id]);
                return $("#employee-load-more-" + e.target.id).remove();
              });
              exist_show_more.push(element.chief);
              continue;
            }
            if (!shownFirstWorkersId[element.chief][element.id]) {
              shownFirstWorkersId[element.chief][element.id] = element;
              results.push($("#employee-id-" + element.chief).append(appendElementToDOM(element)));
            } else {
              results.push(void 0);
            }
          }
          return results;
        });
      } else {
        request.done(function(data, textStatus, jqXHR) {
          var element, exist_show_more, i, len, ref, result_code, results;
          exist_show_more = [];
          if (data.length === 0 || data.length < count) {
            $("#employee-load-more-" + e.target.id).remove();
          }
          results = [];
          for (i = 0, len = data.length; i < len; i++) {
            element = data[i];
            if (Object.keys(shownFirstWorkersId[element.chief]).length >= count) {
              if (ref = element.chief, indexOf.call(exist_show_more, ref) >= 0) {
                continue;
              }
              result_code = $("#employee-id-" + element.chief).append(appendElementLoadMore(element.chief));
              result_code.find("a").click(function(e) {
                getWorkersBoss(e.target.id, count, shownFirstWorkersId[e.target.id]);
                return $("#employee-load-more-" + e.target.id).remove();
              });
              exist_show_more.push(element.chief);
              continue;
            }
            if (!shownFirstWorkersId[element.chief][element.id]) {
              shownFirstWorkersId[element.chief][element.id] = element;
              results.push($("#employee-id-" + element.chief).append(appendElementToDOM(element)));
            } else {
              results.push(void 0);
            }
          }
          return results;
        });
      }
      return request.fail(this.AJAXerrorGetWorkers);
    };

    AJAXWorkersManager.prototype.AJAXerrorGetWorkers = function(jqXHR, textStatus, errorThrown) {
      return console.log("Error: " + jqXHR + ", " + textStatus + ", " + errorThrown);
    };

    appendElementToDOM = function(element) {
      var element_chief, html;
      element_chief = element.chief ? element.chief : '';
      return html = "<div class=\"employee\" id=\"employee-id-" + element.id + "\">\n    <div class=\"row\">\n        <div class=\"col-md-3\"><img src=\"https://avatars0.githubusercontent.com/u/31619203?s=40&amp;v=4\" alt=\"Logo\" width=\"50\" height=\"50\" class=\"img-circle\"/></div>\n        <div class=\"col-md-3\">\n          <p>" + element.name + "</p>\n        </div>\n        <div class=\"col-md-3\">\n          <p>" + element.work_position + "</p>\n        </div>\n        <div class=\"col-md-3\">\n          <p>" + element_chief + "</p>\n        </div>\n    </div>\n</div>";
    };

    appendElementLoadMore = function(element_chief) {
      var html;
      return html = "<div class=\"employee\" id=\"employee-load-more-" + element_chief + "\">\n    <div class=\"row justify-content-md-center\">\n        <div class=\"col-md-auto\">\n            <a href=\"#load-more\" class=\"employee-load-more-link btn btn-default\" id=\"" + element_chief + "\">Загрузити ще ...</a>\n        </div>\n    </div>\n</div>";
    };

    AJAXWorkersManager.prototype.showFirstHierarchy = function(count) {
      if (count == null) {
        count = 50;
      }

      /* Display list first hierarchy */
      return getWorkersBoss("first-hierarchy", count);
    };

    AJAXWorkersManager.prototype.showWorkersSecondHierarchy = function(count) {
      if (count == null) {
        count = 50;
      }

      /* Show 2 hierarchy workers */
      return getWorkersBoss("second-hierarchy", count);
    };

    AJAXWorkersManager.prototype.showListWorkers = function() {
      return console.log(shownFirstWorkersId);
    };

    return AJAXWorkersManager;

  })();

  $(document).ready(function() {
    var me2;
    me2 = new AJAXWorkersManager;
    me2.showFirstHierarchy(40);
    me2.showWorkersSecondHierarchy(1);
    return $(".load-more-workers").click(function() {
      return me2.showFirstHierarchy(40);
    });
  });

}).call(this);
